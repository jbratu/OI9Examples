Function test_u2_select(CtrlEntId, Method, Param1, Param2, Param3, Param4, Param5, Param6)
/*

Commuter module


07-25-05     rjc        Created

*/

declare function FieldCount, Rowexists, Get_Status, Get_Property, Get_Current_Event, RetStack, Standard_Window_events
declare function u2_profile
declare subroutine Set_Property, Set_status
DECLARE SUBROUTINE reduce, reduce_rjc, set_fserror

Equ NEW_EXIST$ To 0     ;* Reduce mode 0
Equ NEXT_CUR$  To 1
Equ ADD_EXIST$ To 2



$Insert Logical
$Insert Msg_Equates
$Insert Popup_Equates


Main:


if assigned(CtrlEntID) else CtrlEntId = ''
if assigned(method) else method = ''
if assigned(Param1) then p1 = Param1 else p1 = ''
if assigned(Param2) then p2 = Param2 else p2 = ''
if assigned(Param3) then p3 = Param3 else p3 = ''
if assigned(Param4) then p4 = Param4 else p4 = ''
if assigned(Param5) then p5 = Param5 else p5 = ''
if assigned(Param6) then p6 = Param6 else p6 = ''

AtWindow = CtrlEntId[1,'.']
CtrlName = CtrlEntId[Col2()+1,len(CtrlEntId)]
AtSelf =RetStack()<1>

err = ''
retval = 0


begin case
		
	case method _eqc 'TEST'
		GoSub test
		
	case otherwise$
		retval = Standard_Window_Events(CtrlEntId, Method, Param1, Param2, Param3, Param4, Param5, Param6)
End case


return retval
*****


Test:


table = 'TEST_U2_SELECT'
volume = 'RJC_020808'

Set_Status(0)
open table To f_test else
  Call attach_Table(volume, '', '')
  If Get_Status(err) then
     Msg(@Window, err)
     return
  end
end
mode  = Get_Property(AtWindow:'.RDO_MODE', 'VALUE')

if TableExists(table) else
	call attach_table(volume, table, '')
End

started = time()


SORTS = '':@fm:"CITY"



expecteds = ''
filters = ''
natives = ''

filters<-1> = 'WITH {CITY} EQ "Cambridge"'
natives<-1> = 'WITH CITY EQ "Cambridge"'
Expecteds<-1> = 124

filters<-1> = 'WITH {CITY} ] "Ca"'
natives<-1> = 'WITH CITY LIKE "Ca..."'
Expecteds<-1> = 4139

filters<-1> = 'WITH {CITY} GE "Ca" AND LE "D"'
natives<-1> = 'WITH CITY GE "Ca" AND LE "D"'
Expecteds<-1> = 18105

filters<-1> = 'WITH {CITY} GT "Bzzz" AND LT "Da"'
natives<-1> = 'WITH CITY  GT "Bzzz" AND LT "Da"'
Expecteds<-1> = 18105

filters<-1> = 'WITH {CREATED} "27 AUG 2006"'
natives<-1> = 'WITH CREATED EQ "27 AUG 2006"'
Expecteds<-1> = 586

filters<-1> = 'WITH {CREATED} GE "01 JUN 2006" AND LE "30 JUN 2006"'
natives<-1> = 'WITH CREATED GE "01 JUN 2006" AND LE "30 JUN 2006"'
Expecteds<-1> = 11129

filters<-1> = 'WITH {CREATED} GT "31 MAY 2006" AND LT "01 JUL 2006"'
natives<-1> = 'WITH CREATED GT "31 MAY 2006" AND LT "01 JUL 2006"'
Expecteds<-1> = 11129

filters = ''

filters<-1> = 'WITH {CITY} EQ "Lima" AND WITH {CREATED} EQ "07 NOV 2006"'
natives<-1> = 'WITH CITY EQ "Lima" AND WITH CREATED EQ "07 NOV 2006"'

filters<-1> = 'WITH {CITY} EQ "Lima" AND WITH {CREATED} GE "07 NOV 2006" AND LE "16 FEB 2007"'
natives<-1> = 'WITH CITY EQ "Lima" AND WITH CREATED  GE "07 NOV 2006" AND LE "16 FEB 2007"'


set_Property(AtWindow:'.RESULT', 'TEXT', '')
set_Property('SYSTEM', 'RECEIVER', AtWindow:'.RESULT')

Set_Property(AtWindow:'.COUNTS', 'LIST','')
declare function getTickCount
reducer = "REDUCE_RJC"

fcnt = count(filters, @fm) + ( filters # '' )
scnt = count(sorts, @fm) + 1
for i = 1 to fcnt
    started = GetTickCount()
	filter = filters<i>
	nExpected = expecteds<i>
	Gosub Get_Expected
	for j = 1 to sCnt
	    time = GetTickCount()
		Cursorvar = 0
		flag   = ""     ;* Reduce Flag variable
		Sort_List  = sorts<j>
		Mode = NEW_EXIST$
		
		ClearSelect Cursorvar
		
		flag = ''
		reduce_script = filter
		call @Reducer(reduce_script, sort_list, mode, table,Cursorvar, flag)
		If flag Else
			Set_FSError()
			Return
		End
		
		Select table By sort_list Using Cursorvar Else
			Set_FSError ()
			return
		end
		nSel = @reccount
		
		done = false$
		nRead = 0
		loop
			ReadNext id USING cursorvar Else done = true$
		until done
			nread +=1
		repeat
		
		
		elapsed = GetTickcount() - started
		line = reducer : " " :filter
        line:=@vm: sort_list
		line:=@vm:nExpected
		line:=@vm:nSel
		line:=@vm:nRead
		line:=@vm:elapsed
		
		
		Call Send_Message(AtWindow:'.COUNTS', 'INSERT', -1, line)
	next
next


set_Property('SYSTEM', 'RECEIVER', AtWindow:'')


Return


Get_Expected:
equ crlf$ To \0D0A\

declare function U2_ExecProc
volumeID = 'RJC_020808'
native_filter = natives<i>
u2_command = 'SELECT ' : table : " " : native_filter
outbuf = space(512)
replies = ''
interactive = true$

u2_stat = U2_ExecProc( VolumeID, u2_Command, OutBuf, Replies, Interactive  )

Convert crlf$ To @fm In OutBuf
Convert ' ' To @fm In OutBuf
nExpected = OutBuf<2>

u2_command = 'CLEARSELECT'
u2_stat = U2_ExecProc( VolumeID, u2_Command, OutBuf, Replies, Interactive  )




return



