Function RTI_BRW_FILTER(invokingName, UDetails, Tablename)
*#!Precompile
/*
*  This program is proprietary and is not to be used by or disclosed to others, nor is it to be copied without
*  written permission from Revelation Technologies, Inc.
!
*
*  VERSION    : 1.0
*
*
*  AUTHOR     : Bryan Shumsky
*
*  CREATED    : September 23, 2009
*
*
!
*
*  REVISION HISTORY           (Most CURRENT first) :
*
*   DATE            IMPLEMENTOR     FUNCTION
*   --------             -----------------------     --------
*   04 Oct 2012	bzs						Added support for "definitions" call
*	24 Feb 2012   bzs                       Added support for "term" call
*  17 Jan  2012   bzs                       Added support for "init" call
*  03 May 2010   bzs                       Added logic to respect environment security settings
*
*
*/
*
$Insert ENVIRON_CONSTANTS
*
If Assigned(invokingname) Else invokingname = ""
If Assigned(udetails) Else udetails = ""
If Assigned(tablename) Else tablename = ""
*
* By default, no filters are applied EXCEPT for system-wide filters
SecFlds = @ENVIRON_SET<ENV_EXCLUDE_FIELDS$>
Sectbl =  @ENVIRON_SET<ENV_EXCLUDE_FROM_REPORTS$>

rslt = ""
Begin Case
	Case uDetails = "INIT"
		* perform any required initialization (note: "DESIGNER" passed as invoking name if called from BRWDesigner, otherwise invokingname is a unique identifier)
		RSLT = ""

	Case uDetails = "TERM"
		* perform any required wrapup   (note: "DESIGNER" passed as invoking name if called from BRWDesigner, otherwise invokingname is a unique identifier)
		RSLT = ""

	Case uDetails = "STPROC"
		* return list of stored procedures to use as a data source
		RSLT = ""
		*RSLT = "@RTI_BRW_SAMPLEDATASOURCE"

	Case uDetails = "TABLES"
		* return list of all tables (except "!" and "DICT." tables)
		bExclude = 1
		Call Rlist("SELECT SYSTABLES BY @ID", '5')
		DONE = 0
		Loop
			Readnext id Else DONE = 1
		Until DONE Do
			If bExclude=0 Or (id[1,1] <> "!" And id[1,5] <> "DICT.") then
				Locate id In SecTbl<1> Using @VM Setting dummy else
					rslt<1,-1> = id
				End
			end
		Repeat		

	Case uDetails = "FIELDS" Or uDetails = "MVFIELDS"
		* return list of fields for specified table
		trslt = Xlate("DICT.":TableName, "%FIELDS%", "", "X")
		num.flds = dcount(trslt<3>, @VM)
		rslt = ""
		For each.fld = 1 To num.flds
			this.fld = trslt<3,each.fld>
			ismv = trslt<9,each.fld>
			If (uDetails = "FIELDS") Or (uDetails = "MVFIELDS" And isMV) Then
				chkfld = tableName:@svm:this.fld
				Locate chkfld In secflds<1> Using @vm Setting chkpos Else
					rslt<1,-1> = this.fld
				End
			End
		Next each.fld
		
	Case uDetails = "DEFINITIONS"
		Begin Case
			Case INVOKINGNAME _eqc "LABEL"
				* Return overriding list of label definitions
				* Read from a record in the system, or hard-code
				* format of the lines:
				/*
				// ID        label id
				// DESC      description
				// ACROSS    labels across a page
				// METRIC    metric/english units
				// WID       label width (all measurements in twips)
				// HEI       label height
				// XSPC      horz space between labels
				// YSPC      vert space between labels
				// MLEFT     page margin left
				// MRIGHT    page margin right
				// MTOP      page margin top
				// MLEFTLBL  label margin left
				// MTOPLBL   label margin top
				// CONT      continuous/sheet
				// PORTRAIT  portrait orientation				
				*
				* for example:
				*
				rslt = "OML 101,24 mm x 102 mm,1,1,5783,1503,0,0,709,709,71,340,113,1,1"
				rslt<-1> = "OML 102,37 mm x 102 mm,1,1,5783,2240,0,0,709,709,71,340,113,1,1"
				rslt<-1> = "OML 103,49 mm x 102 mm,1,1,5783,2920,0,0,709,709,71,340,113,1,1"
				rslt<-1> = "OML 105,49 mm x 127 mm,1,1,7201,2920,0,0,709,709,71,340,113,1,1"
				rslt<-1> = "OML 202,37 mm x 102 mm,2,1,5874,2240,91,0,675,675,71,340,113,1,1"
				rslt<-1> = "OML 203,49 mm x 102 mm,2,1,5874,2920,91,0,675,675,71,340,113,1,1"
				*/
			Case INVOKINGNAME _eqc "PAPER"
				* Return overriding list of paper definitions
		End CASE
		
		
End Case
*
Return rslt
