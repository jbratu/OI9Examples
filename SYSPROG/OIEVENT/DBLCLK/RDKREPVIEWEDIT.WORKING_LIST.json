{
    "record1": {
        "<1>": "$insert uires_equates\r\n$insert rdkdeploy_equates\r\n$insert rdklocatetype_equates\r\n$insert logical\r\n\r\nequ SEARCH_ALL$            to 1\r\nequ SEARCH_USEDBY_RES$     to 3\r\nequ SEARCH_USES$           to 4\r\nequ SEARCH_VIEW$           to 5\r\n\r\nequ MAXLISTEX$\tTO 65500\r\n\r\ndeclare function RdkGetHierarchyClasses, RdkGetHierarchyEntities\r\ndeclare function RdkGetTypeFromHierarchy, RdkGetClassFromHierarchy\r\ndeclare function RdkLocateType\r\ndeclare function send_message, Utility, Repos_Resolve_Entity, Dialog_Box\r\n\r\n/* double click at specified location in the work list */\r\n\t\t\r\nSelPos     = @CtrlEntID->SelPos_Ex\r\nExSelected = SelPos<1>\r\nExLevel    = SelPos<2>\r\nExListPos  = SelPos<4>\r\nbChildren  = SelPos<3> # 0\r\n\r\nAppId = \"\"\r\nif .Check_CurrentApp->Check = TRUE$ then\r\n\tAppId = @AppId<1>\r\nend\r\n\r\nbPublishable = .Check_Publishable->Check\r\n\r\nEveryThing\t= @CtrlEntID->List_Ex\r\nAllTypes\t= .Type_List->List\r\nMDIFrame\t= Get_Property( @window, 'MDIFRAME' )\r\n\r\nMaxLen = MAXLISTEX$ - len(Everything)\r\n\r\nif not(bChildren) then\r\n\tbegin case\r\n\t\tcase ExLevel = 1\r\n\t\t\tnotUsed = utility( 'CURSOR', 'H' )\r\n\t\t\treposType = @CtrlEntID->List<ExListPos>\r\n\t\t\t\r\n\t\t\ttypeLoc = RdkLocateType(AllTypes, reposType, RDKTYPEBYDESC$)\r\n\t\t\t\r\n\t\t\tif typeLoc then\r\n\t\t\t\tif not(AllTypes<typeLoc, 3>) then\r\n\t\t\t\t\t/* do it only for the set of all entities */\r\n\t\t\t\t\tif get_property(CtrlEntID, \"@SRCHCRT\") = SEARCH_ALL$ then\t\t\t\t\t\r\n\t\t\t\t\t\treposType  = AllTypes<typeLoc, 1>\r\n\t\t\t\t\t\tInsertList = RDKGetHierarchyClasses(AppId, reposType, MaxLen)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif len(InsertList) then\r\n\t\t\t\t\t\t\tnotUsed = send_message(CtrlEntID, \"INSERT\", ExListPos + 1, InsertList)\r\n\t\t\t    \t\tend else\r\n\t\t\t\t    \t\tInsertList = RDKGetHierarchyEntities(AppId, reposType, \"\", bPublishable, MaxLen)\r\n\t\t\t\t\t    \tif len(InsertList) then\r\n\t\t\t\t\t\t\t\tnotUsed = send_message(CtrlEntID, \"INSERT\", ExListPos + 1, InsertList)\r\n\t\t\t\t\t\t\tend\r\n\t\t\t    \t\tend\r\n\t\t\t    \tend\t\r\n\t\t\t    \tAllTypes<typeLoc, 3> = TRUE$\r\n\t\t\t\tend\r\n\t\t\t\t.Type_List->List = AllTypes\r\n\t\t\tend\r\n\t\t\tnotUsed = utility( 'CURSOR', 'A' )\r\n\r\n\t\tcase ExLevel = 2\r\n\t\t\tnotUsed = utility( 'CURSOR', 'H' )\r\n\t\t\treposType = RdkGetTypeFromHierarchy(Everything, ExSelected, AllTypes)\r\n\t\t\tif len(reposType) then\r\n\t\t\t\treposClass = @CtrlEntID->List<ExListPos>[5, 99]\r\n\t\t    \tInsertList = RDKGetHierarchyEntities(AppId, reposType, reposClass, bPublishable, MaxLen)\r\n\t\t    \tif len(InsertList) then\r\n\t\t\t\t\tnotUsed = send_message(CtrlEntID, \"INSERT\", ExListPos + 1, InsertList)\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\t\tnotUsed = utility( 'CURSOR', 'A' )\r\n\r\n\t\tcase ExLevel = 3\r\n\t\t\treposType = RdkGetTypeFromHierarchy(Everything, ExSelected, AllTypes)\r\n\t\t\tif len(reposType) then\r\n\t\t\t\treposClass = RdkGetClassFromHierarchy(Everything, ExSelected)\r\n\t\t\t\tEntId = \"~*\" : reposType : \"*\" : reposClass : \"*\" : Everything<ExSelected>[5, 999]\r\n\t\t\t\tentBody = Repos_Resolve_Entity( entID )\r\n    \r\n\t\t\t\tif len( entBody ) then\r\n\t\t\t\t\tnotUsed = dialog_box(DLG_ENTPROPS$, MDIFrame, entId : @RM : entBody)\r\n\t\t\t\tend\r\n\t\t\tend\r\n\tend case\r\nend\r\n\t\r\nreturn FALSE$\t\r\n\r\n"
    }
}