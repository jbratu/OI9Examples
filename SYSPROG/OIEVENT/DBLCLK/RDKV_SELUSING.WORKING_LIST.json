{
    "record1": {
        "<1>": "$insert rdklocatetype_equates\r\n$insert message_box_equates\r\n\r\nEQU TRUE$\t\tTO 1\r\nEQU FALSE$\t\tTO 0\r\nEQU NULL$\t\tTO \"\"\r\n\r\nEQU MAXLISTLEN$\tTO 65000\r\n\r\nDeclare Function RDKGetHierarchyClasses, RDKGetHierarchyEntities, RdkLocateType\r\nDeclare Function RDKGetClassFromHierarchy, RDKGetTypeFromHierarchy\r\nDeclare Function Send_Message, Utility, Message_Box, Get_Status, Set_Status\r\nDeclare Subroutine End_Dialog, MessageBeep\r\n\r\n/* double click at specified location in the work list */\r\nSelItem = @CtrlEntID->SelPos_Ex\r\n\r\nAppId = \"\"\r\nIf Get_Property(\"REPVIEWEDIT.CHECK_CURRENTAPP\", \"CHECK\") = TRUE$ then\r\n\tAppId = @APPID<1>\r\nend\r\n\r\nbPublishable = Get_Property(\"REPVIEWEDIT.CHECK_PUBLISHABLE\", \"CHECK\")\r\n\r\nEveryThing = @CtrlEntId->List_Ex\r\nMaxLen = MAXLISTLEN$ - Len(EveryThing)\r\n\r\nIf SelItem<3> = 0 then\r\n\tBegin Case\r\n\t\tCase SelItem<2> = 1\r\n\t\t\tnotUsed = utility( 'CURSOR', 'H' )\r\n\t\t\treposType = @CtrlEntID->List<SelItem<4>>\r\n\t\t\tbVisited = \"\"\r\n\t\t\tGosub TranslateType\r\n\t\r\n\t\t\tIf reposType <> \"\" then\r\n\t\t\t\tInsertList = RDKGetHierarchyClasses(AppId, reposType, MaxLen)\r\n   \t\t\t\tIf Get_Status() then\r\n   \t\t\t\t\tGosub DisplayTruncateMessage\r\n   \t\t\t\tend\r\n   \t\t\t\tnotUsed = Set_Status(0)\r\n\t\t\t\tIf Len(InsertList) then\r\n\t\t\t\t\tnotUsed = Send_Message(CtrlEntID, \"INSERT\", SelItem<4> + 1, InsertList)\r\n\t    \t\tend else\r\n\t    \t\t\tIf Not(bVisited) then\r\n\t    \t\t\t\tInsertList = RDKGetHierarchyEntities(AppId, reposType, \"\", bPublishable, MaxLen)\r\n\t    \t\t\t\tIf Get_Status() then\r\n\t    \t\t\t\t\tGosub DisplayTruncateMessage\r\n\t    \t\t\t\tend\r\n\t    \t\t\t\tnotUsed = Set_Status(0)\r\n\t    \t\t\t\tIf Len(InsertList) then\r\n\t\t\t\t\t\t\tnotUsed = Send_Message(CtrlEntID, \"INSERT\", SelItem<4> + 1, InsertList)\r\n\t\t\t\t\t\tend\r\n\t\t\t\t\tend\r\n\t    \t\tend\r\n\t\t\tend\r\n\t\t\tnotUsed = utility( 'CURSOR', 'A' )\r\n\r\n\t\tCase SelItem<2> = 2\r\n\t\t\tnotUsed = utility( 'CURSOR', 'H' )\r\n\r\n\t\t\treposType = RdkGetTypeFromHierarchy(EveryThing, SelItem<1>, .List_Types->List)\r\n\r\n\t\t\tIf reposType <> \"\" then\r\n\t\t\t\treposClass = @CtrlEntID->LIST<SelItem<4>>[5, 99]\r\n   \t\t\t\tInsertList = RDKGetHierarchyEntities(AppId, reposType, reposClass, bPublishable, MaxLen)\r\n   \t\t\t\tIf Get_Status() then\r\n   \t\t\t\t\tGosub DisplayTruncateMessage\r\n   \t\t\t\tend\r\n   \t\t\t\tnotUsed = Set_Status(0)\r\n   \t\t\t\tIf Len(InsertList) then\r\n\t\t\t\t\tnotUsed = Send_Message(CtrlEntID, \"INSERT\", SelItem<4> + 1, InsertList)\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\t\tnotUsed = utility( 'CURSOR', 'A' )\r\n\r\n\t\tCase SelItem<2> = 3\r\n\t\t\treposType = RdkGetTypeFromHierarchy(EveryThing, SelItem<1>, .List_Types->List)\r\n\t\t\treposClass = RdkGetClassFromHierarchy(Everything, SelItem<1>)\r\n\t\t\tEnd_Dialog(\"RDKV_SELUSING\", \"~*\" : reposType : \"*\" : reposClass : \"*\" : EveryThing<SelItem<1>>[5, 99])\r\n\t\t\r\n\tend Case\r\nend\r\n\t\r\nreturn FALSE$\t\r\n\r\nTranslateType:\r\n\tAllTypes = .List_Types->List\r\n\tTypeLoc = RdkLocateType(AllTypes, reposType, RDKTYPEBYDESC$)\r\n\r\n\tIf TypeLoc then\r\n\t\treposType = AllTypes<TypeLoc, 1>\r\n\t\tbVisited = AllTypes<TypeLoc, 3>\r\n\t\tIf Not(bVisited) then\r\n\t\t\tAllTypes<TypeLoc, 3> = TRUE$\r\n\t\t\t.List_Types->List = AllTypes\r\n\t\tend\r\n\tend else\r\n\t\treposType = \"\"\r\n\tend\r\nreturn\r\n\r\nDisplayTruncateMessage:\r\n\tMessageBeep(MSG_ICON_INFO$)\r\n\tnotUsed = Message_Box(@WINDOW, \"Too many items to display in listbox. List truncated!\", \"Repository View Editor\", MSG_ICON_INFO$)\r\nreturn"
    }
}