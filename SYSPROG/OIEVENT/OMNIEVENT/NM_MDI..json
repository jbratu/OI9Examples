{
    "record1": {
        "<1>": "Declare Function Create_Dialog, Send_Event, CreateNotesForm, CreateNotesView, CreateSharedField\r\nDeclare Function OpenNotesDB, CloseNotesDB, OpenNote, ConvFieldType, Send_Message, Dialog_Box\r\nDeclare Subroutine End_Window, Utility, CloseNote, DeleteNote, Set_Property, Get_Status, Message_Box\r\n\r\n\r\n$Insert Notes_Equates\r\n$Insert Message_Box_Equates\r\n\r\nEqu FALSE$    to 0\r\nEqu TRUE$\t  to 1\r\nEqu UNTITLED$ to \"(untitled)\"\r\n\r\nAppTitle = \"Notes Manager\"\r\n\r\nmdi_win     = @window\r\nchild_win   = @mdi_win->mdiactive\r\ndlg_win     = \"NM_DIALOG\"\r\nprop_win    = \"FLD_PROP\"\r\nbSaveFailed = FALSE$\r\n\r\n@user0 = \"\"\t\t\t\t\t\t\t        ;* servers \t\r\n@user1 = \"\"                                 ;* directory paths\r\n@user2 = \"\"                                 ;* directory names\r\n@user3 = \"\"                                 ;* file paths\r\n@user4 = \"\"                                 ;* file names\r\n\r\nbSave  \t  = child_win:\".TEXT_4\"\r\ntblAuxil  = child_win:\".TABLE_2\"\r\nNoteName  = Get_Property(child_win:\".TEXT_2\", \"TEXT\")\r\nwNoteType = Get_Property(child_win:\".TEXT_3\", \"TEXT\")\r\n\r\n\r\n*************************************************\r\n*\t\t\t\t\t\t\t\t\t\t\t\t*\r\n* Main program\t\t\t\t\t\t\t\t\t*\r\n*\t\t\t\t\t\t\t\t\t\t\t\t*\r\n*************************************************\r\nBegin Case\r\n\tCase Message = \"CREATE\"\r\n\t\t@recur0 = 0\t\t\t\t\t        ;* Set the number of child windows to 0\r\n\t\t@mdi_win->statusline = mdi_win:\".STLINE\"\r\n\t\t\r\n\t\r\n\tCase Message  = \"DELETE\"\r\n\t\tlstFields = child_win:\".FLD_LIST\"\r\n\t\tlstFormul = child_win:\".VF_LIST\"\r\n\t\ttblColumns = child_win:\".VIEW_TABLE\"\r\n\t\tbFocus = BitOr(@tblColumns->selpos<1>, @lstFields->selpos)\r\n\t\t\r\n\t\tIf bFocus Then\r\n\t\t\tIf wNoteType = 2 Then\t\t\t;* Remove a column from the view\r\n\t\t\t\tpos   = @tblColumns->selpos<1>\r\n\t\t\t\tstatus = Send_Message(tblAuxil, \"DELETE\", pos - 1)\r\n\t\t\t\t\r\n\t\t\t\tIf @tblAuxil->list = \"\" Then\r\n\t\t\t\t\t/* Insert empty string and set column formula to \"@ALL\". */\r\n\t\t\t\t\t/* This makes \"empty view\" saving possible later on.  \t */\r\n\t\t\t\t\t\r\n\t\t\t\t\tcolStyle = Send_Message(tblColumns, \"COLSTYLE\", 2)\r\n\t\t\t\t\tstatus = Send_Message(tblColumns, \"INSERTCOL\", -1, \"\":@fm:colStyle:@fm:40:@fm:60)\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t@tblAuxil->list  = \"@ALL\":@vm:Space(10):@vm:\"@ALL\":@vm:1\t\t\r\n\t\t\t\t\t@lstFormul->misc = \"EMPTY_VIEW\"\t\t \r\n\t\t\t\t\tpos = 2\t\t \r\n\t\t\t\tEnd\t\r\n\t\t\t\tstatus = Send_Message(tblColumns, \"DELETECOL\", pos)\r\n\t\t\t\t@tblColumns->list = \" \"\r\n\t\t\t\t\r\n\t\t\tEnd Else\t\t\t\t\t\t;* Remove a field from the form\t\r\n\t\t\t\r\n\t\t\t\tDelList   = @lstFields->selpos\r\n\t\t\t\tiCnt = count(@lstFields->list, @fm) + 1\r\n\t\t\t\tIf iCnt = 1 Then\r\n\t\t\t\t\tcall Message_Box(@window, \"You cannot delete the last field.\", AppTitle, MSG_ICON_EXCLAM$)\r\n\t\t\t\t\tReturn 0\r\n\t\t\t\tEnd\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tFor i = iCnt to 1 Step -1\r\n\t\t\t\t\tLocate i In DelList Using @fm Setting pos Then\r\n\t\t\t\t\t\tstatus = Send_Message(tblAuxil,  \"DELETE\", i)\t\r\n\t\t\t\t\t\tstatus = Send_Message(lstFields, \"DELETE\", i)\r\n\t\t\t\t\t\t@lstFields->selpos = Not(i-1) + (i-1)\t\t\t\r\n\t\t\t\t\t\tstatus = Send_Event(lstFields, \"CHANGED\")\r\n\t\t\t\t\tEnd\t\r\n\t\t\t\tNext i\t\t\t\t\r\n\t\t\t\t\r\n\t\t\tEnd\r\n\t\t\t@bSave->text       = FALSE$\t        \r\n\t\t\t.save_btn->enabled = TRUE$\r\n\t\t\t.menu.file.save->enabled = TRUE$\r\n\t\tEnd\r\n\t\r\n\t\r\n\tCase Message = \"EDIT_COL\"  \r\n\t\tstatus = Create_Dialog(prop_win, mdi_win, FALSE$, child_win)\r\n\t\t\r\n\t\t\r\n\tCase Message = \"EDIT_FIELD\"  \r\n   \t\tstatus = Create_Dialog(prop_win, mdi_win, FALSE$, child_win)\t\r\n   \t\t\r\n   \t\t\r\n   \tCase Message = \"GOTFOCUS\"\r\n        .save_btn->enabled = Not(@bSave->text)\t\r\n\t\t\r\n\r\n\tCase Message = \"NEW_NOTE\"  \r\n\t\tstatus = Create_Dialog(prop_win, mdi_win, FALSE$, child_win)\r\n\t\t\r\n   \t\t\r\n \tCase Message = \"OPEN_DATABASE\"\r\n\t \t.menu.design->enabled = TRUE$\r\n\t \tMDISize = .->size\r\n \t\tstatus = Create_Dialog(dlg_win, mdi_win, FALSE$, MDISize)\r\n \t\t\r\n\t\r\n\tCase Message = \"SAVE\"\r\n\t\tDBName = Get_Property(child_win:\".TEXT_1\", \"TEXT\")\r\n\t\tProceed = FALSE$\r\n\t\t\r\n\t\tGoSub PromptOnSave\r\n\t\t\r\n\t\tIf Not(Proceed) Then Return FALSE$\r\n\t\t\r\n\t\tIf @tblAuxil->list = \"\" And wNoteType = 2 Then Return FALSE$\r\n\t\t\r\n\t\tUtility(\"CURSOR\", \"H\")\r\n\t\t\r\n\t\tGoSub DeleteNote\r\n\t\t\r\n\t\tOn wNoteType GoSub SaveForm, SaveView, SaveSharedField\r\n\t\t\r\n\t\tIf \tNot(bSaveFailed) Then\r\n\t\t\t@child_win->text = \"Edit \":NoteName\r\n\t\t\tSet_Property(child_win:\".TEXT_2\", \"TEXT\", NoteName)\r\n\t\t\t@bSave->text       = TRUE$\r\n\t\t\t.save_btn->enabled = FALSE$\r\n\t\t\t.menu.file.save->enabled = FALSE$\r\n\t\tEnd\t\t\t\r\n\t\t\r\n\t\tUtility(\"CURSOR\", \"A\")\t\t\r\nEnd Case\t\t\r\n\t\t\t\r\nReturn FALSE$\r\n\r\n\r\n*************************************************\r\n*\t\t\t\t\t\t\t\t\t\t\t\t*\r\n* Subroutines\t\t\t\t\t\t\t\t\t*\r\n*\t\t\t\t\t\t\t\t\t\t\t\t*\r\n*************************************************\r\nDeleteNote:\r\n\tsrcstr = NOTE_CLASS_FORM$:@fm:NOTE_CLASS_VIEW$:@fm:NOTE_CLASS_FIELD$\r\n\ttype = field(srcstr, @fm, wNoteType)\r\n\t\r\n\tIf OpenNotesDB(DBName) Then\r\n   \t\tIf OpenNote(DBName, \"LINEAR\":@fm:\"SELECT $Title = '\":NoteName:\"'\":@fm:type, noteID) Then\r\n      \t\tDeleteNote(noteID)\r\n\t    End \r\n\tEnd\r\n\tx = CloseNotesDB(DBName)\r\nReturn\r\n\r\n\r\nPromptOnSave:\t\r\n\tIf NoteName = UNTITLED$ Then\r\n\t\t/* If the note is not a shared field ask its name */\r\n\t\tIf wNoteType <> 3 Then\r\n\t\t\tNoteName = Dialog_Box(prop_win, mdi_win, \"SAVE_MSG\":@fm:wNoteType)\r\n\t\tEnd Else\r\n\t\t/* Save shared field */\r\n\t\t\tNoteName = Get_Property(child_win:\".FLD_LIST\", \"LIST\", 1)\r\n\t\tEnd\t\r\n\t\tIf NoteName Ne \"\" And NoteName Ne UNTITLED$ Then Proceed = TRUE$\r\n\tEnd\tElse\r\n\t\tProceed = TRUE$\t\r\n\tEnd\t\t\r\nReturn\r\n\r\n\r\nMakeUpFields:\r\n\tfields = @tblAuxil->list\r\n\tiCnt = count(fields, @fm) + 1\r\n\tFor i = 1 to iCnt\r\n\t\tfields<i, 2> = ConvFieldType(fields<i, 2>)\r\n\tNext i\r\n\tfields = trim(fields)\r\nReturn\r\n\r\n\t\r\nSaveSharedField:\r\n\tGoSub MakeUpFields\r\n\tIf CreateSharedField(DBName, NoteName, fields) Else\r\n\t\tGet_Status(err)\r\n\t\tMessage_Box(@window, err, AppTitle, MSG_ICON_EXCLAM$)\r\n\t\tbSaveFailed = TRUE$\r\n\tEnd\r\nReturn\r\n\r\n\t\t\t\t\r\nSaveForm:\t \r\n\tGoSub MakeUpFields\r\n\tIf CreateNotesForm(DBName, NoteName, fields) Else\r\n\t\tGet_Status(err)\r\n\t\tMessage_Box(@window, err, AppTitle, MSG_ICON_EXCLAM$)\r\n\t\tbSaveFailed = TRUE$\r\n\tEnd\r\nReturn\r\n\r\n\r\nSaveView:\r\n    columns  = @tblAuxil->list\r\n    iCnt = Count(columns, @fm) + 1\r\n    For i = 1 to iCnt\r\n    \t/* If there is no formula defined copy label to formula. */\r\n    \tIf columns<i, 4> = 0  Then\r\n    \t\t columns<i, 1> = columns<i, 3>\r\n\t\tEnd    \t\t \r\n\t\tcolumns<i, 4> = @rm\r\n    Next\r\n    Swap @vm:@rm with \"\" in columns\r\n\r\n\tIf CreateNotesView(DBName, NoteName, columns) Else\r\n\t\tGet_Status(err)\r\n\t\tMessage_Box(@window, err, AppTitle, MSG_ICON_EXCLAM$)\r\n\t\tbSaveFailed = TRUE$\r\n\tEnd\t\t\r\nReturn"
    }
}