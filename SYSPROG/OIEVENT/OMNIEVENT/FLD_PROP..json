{
    "record1": {
        "<1>": "Declare Function OpenNotesDB, OpenNote, CloseNote, CloseNotesDB, SetNoteField, Send_Message \r\nDeclare Subroutine End_Window, End_Dialog, Set_Property, Send_Event\r\n\r\n\r\n$Insert Notes_Equates\r\nEqu TRUE$  to 1\r\nEqu FALSE$ to 0\r\n\r\nmdi_win   = \"NM_MDI\"\r\nchild_win = @mdi_win->mdiactive\t\r\n\r\nBegin Case \r\n\tCase Message = \"EXIT\"\r\n\t\tEnd_Window(@window)\r\n\t\t\r\n\t\t\r\n\tCase Message = \"OKAY\"\t\t\r\n\t\tIf @@window->text = \"Notes Manager\" Then \r\n\t\t\tnote_name = .edl_1->text\r\n\t\t\tEnd_Dialog(@window, note_name)\r\n\t\tEnd Else\r\n\t\t\ttblAuxil  = child_win:\".TABLE_2\"\r\n\t\t\tsave_flg  = child_win:\".TEXT_4\"\r\n\t\t\tnote_type = Get_Property(child_win:\".TEXT_3\", \"TEXT\")\r\n\t\t\t\r\n\t\t\tOn note_type GoSub FieldOK, ViewOK, FieldOK\r\n\t\t\t\r\n\t\t\t@save_flg->text = FALSE$\r\n\t\t\tSet_Property(mdi_win:\".SAVE_BTN\",       \"ENABLED\", TRUE$)\r\n\t\t\tSet_Property(mdi_win:\".MENU.FILE.SAVE\", \"ENABLED\", TRUE$)\r\n\t\t\t\r\n\t\t\tEnd_Window(@window)\r\n\t\tEnd\r\n\t\t\r\n\tCase Message = \"PRIVATE_PROPERTY\"\r\n\t\tBegin Case\r\n\t\t\tCase Param1 = \"EDL_1_CNGD\"\r\n\t\t\t\tDeclare Function IsInList\r\n\t\t\t\tDeclare Subroutine  Set_Property\r\n\r\n\t\t\t\tEqu MaxLen$ to 25\r\n\t\t\t\t\r\n\t\t\t\tNewData = .edl_1->text\r\n\t\t\t\tpos \t= .edl_1->selection \r\n\t\t\t\tpos<1> \t= pos<1> - 1\r\n\r\n\t\t\t\tIf IsInList(\" \", NewData) Or IsInList(\";\", NewData) Or Len(NewData) > MaxLen$ Then \r\n\t\t\t\t\tNewData = NewData[1, MaxLen$]\r\n\t\t\t\t\tConvert \" \" to \"\" in NewData\r\n\t\t\t\t\tConvert \";\" to \"\" in NewData\r\n\t\t\t\t\t.edl_1->text = NewData\r\n\t\t\t\t\t.edl_1->selection = pos \r\n\t\t\t\tEnd\t\r\n\r\n\t\t\t\tIf NewData = \"\" Then\r\n\t\t\t\t\t.okay->enabled = FALSE$\r\n\t\t\t\tEnd Else \r\n\t\t\t\t\t.okay->visible = TRUE$\r\n\t\t\t\t\t.okay->enabled = TRUE$\t\r\n\t\t\t\t\t.cncl->visible = TRUE$\r\n\t\t\t\t\t\r\n\t\t\t\t\t Send_Event(@window:\".CHECK_1\", \"CLICK\")\r\n\t\t\t\t\t Send_Event(@window:\".COMBO_1\", \"CHANGED\")\r\n\t\t\t\tEnd\r\n\t\tEnd Case\t\t\t\r\n\tEnd Case\t\r\nRETURN 0\r\n\r\nFieldOK:\r\n\tfield_list = child_win:\".FLD_LIST\"\r\n\tnote_name = child_win:\".TEXT_2\"\r\n\tdlm = \"\"\r\n\tbuff_1 = trim(@field_list->list)\r\n\tbuff_2 = @tblAuxil->list\r\n\r\n\tIf buff_1 Eq \"\" Then\r\n\t\tbuff_2 = \"\" \r\n\tEnd\tElse  \r\n\t\tdlm = @fm\r\n\tEnd  \r\n\t\r\n\tFieldName  = .edl_1->text\r\n\tFieldDescr = .edl_2->text\r\n\tFieldType  = .combo_1->text\r\n\tIf FieldType = \"Keywords\" Then FieldType = \"TextList\"\r\n\t\r\n\tConvert \" \" to \"\" in FieldType\r\n\tFieldLabel = FieldName\r\n\t\r\n\tbuff_1 := dlm:FieldName\r\n\tbuff_2 := dlm:FieldName:@vm:FieldType:@vm:FieldDescr:@vm:FieldLabel\r\n\r\n\t@field_list->list = buff_1\r\n\t@tblAuxil->list = buff_2\r\n\tIf note_type = 3 Then \r\n\t\t@note_name->text = FieldName\r\n\t\tSet_Property(mdi_win:\".NEWS_BTN\", \t\t  \"ENABLED\", FALSE$)\r\n\t\tSet_Property(mdi_win:\".MENU.EDIT.SH_FLD\", \"ENABLED\", FALSE$)\r\n\t\t@child_win->text = \"Show \":FieldName\r\n\tEnd\t\r\n\t\r\nReturn\r\n\t\r\nViewOK:\r\n\tview_tbl   = child_win:\".VIEW_TABLE\"\r\n\tview_name  = child_win:\".TEXT_2\"\r\n\tfield_list = child_win:\".VF_LIST\" \r\n\tbEmptyView = @field_list->misc\r\n\r\n\tTitle    = .edl_1->text\r\n\tItemName = \"Item\"\r\n\tFormula  = @field_list->list<1>\r\n    flagFrml = 1\r\n\trCnt = 1\r\n\t\r\n\tIf Formula = \"\" Then \r\n\t\tFormula  = ItemName : rCnt \r\n\t\tflagFrml = 0\t\t\r\n\tEnd\t\t\r\n\t\t\t\t\r\n\t/* Get previous column's settings, and insert a new column into the auxiliary table */\r\n\t\r\n\t@view_tbl->redraw = FALSE$\r\n\tStyle  = Send_Message(view_tbl, \"COLSTYLE\", 2)\r\n\tstatus = Send_Message(view_tbl, \"INSERTCOL\", -1, Title:@fm:Style:@fm:40:@fm:50)\t\r\n\r\n\ttemp_list = @tblAuxil->list\r\n\t\r\n\t/* If the last column deleted insert the empty one */\r\n\t\r\n\tIf bEmptyView = \"EMPTY_VIEW\" Then  \r\n\t\tstatus = Send_Message(view_tbl, \"DELETECOL\", 2)\r\n\t\ttemp_list = \"\"\r\n\tEnd Else\t\r\n\t\ttemp_list := @fm\r\n\t\trCnt = count(temp_list, @fm) + 1\r\n\tEnd\t\r\n\t\r\n\t@view_tbl->redraw = TRUE$\r\n\t@view_tbl->list = \" \"\r\n\t\t\t\r\n\ttemp_list := Formula:@vm:Title:@vm:ItemName:rCnt:@vm:flagFrml \t\t\r\n\t@tblAuxil->list = temp_list\t\t\t\t\t  ;* Append a row into auxiliary table\r\n\t@field_list->misc = \"NON_EMPTY_VIEW\"\t\t  \t\r\nReturn\t\t"
    }
}