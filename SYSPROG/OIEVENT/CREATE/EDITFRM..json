{
    "record1": {
        "<1>": "Declare Function ListFormFields, ListViewColumns, ListSharedFields, Send_Event, Send_Message\r\nDeclare Subroutine Msg, Get_Status, End_Window, Utility \r\n\r\n$Insert Notes_Equates\r\n\r\nEqu TRUE$  to 1\r\nEqu FALSE$ to 0\r\n\r\nmdi_win = \"NM_MDI\"\r\ndlg_win = \"NM_DIALOG\"\r\nbtn_name = dlg_win:\".EDIT_BTN\"\r\n\r\nst = Set_Property(\"NM_MDI.MENU.FILE.CLOSE\", \"ENABLED\", TRUE$)\t\r\n \r\nUtility(\"CURSOR\", \"H\")\r\n\r\ndbname = CreateParam<1> \r\nConvert @vm to @fm in dbname\r\n.text_1->text = dbname \r\n\r\nnote_name = CreateParam<2> \r\n.text_2->text = note_name\r\n.text_4->text = TRUE$\r\n\r\nview_tbl = @window:\".VIEW_TABLE\"\r\n\r\n\r\nstatus = 0\r\n\r\n*************************************************\r\n*\t\t\t\t\t\t\t\t\t\t\t\t*\r\n* Main block\t\t\t\t\t\t\t\t\t*\r\n*\t\t\t\t\t\t\t\t\t\t\t\t*\r\n*************************************************\r\nBegin Case\r\n\tCase CreateParam<3> = NOTE_CLASS_FORM$      \r\n\t\t.text_3->text = 1\r\n\t\tstatus = ListFormFields(dbname, note_name, fields) \r\n\t\tGoSub ShowForm\r\n\t\t\t\t\r\n\tCase CreateParam<3> = NOTE_CLASS_VIEW$\r\n\t\t.text_3->text = 2\r\n\t\t\r\n     \tIf ListViewColumns(dbname, note_name, columns) Else \r\n     \t\t.vf_list->misc = \"EMPTY_VIEW\"\r\n     \t\tcolumns = \"\"\r\n     \tEnd\t\r\n\t\tGoSub ShowView    \r\n   \t\t\r\n    Case  CreateParam<3> = NOTE_CLASS_FIELD$\r\n   \t\t.text_3->text = 3\r\n    \tstatus = ListSharedFields(dbname, note_name, fields) \r\n    \tIf fields Ne \"\" Then \r\n    \t\tx = Set_Property(mdi_win:\".NEWS_BTN\", \"ENABLED\", FALSE$)\r\n    \tEnd\t\r\n   \t\tGoSub ShowForm\r\nEnd Case \r\n\r\n/* Align child window and show it*/\r\n\r\nwin_size = .->size\r\nwin_size<1> = (@recur0 - 1) * 20\r\nwin_size<2> = win_size<1>\r\n\r\n.->size = win_size\r\n.->misc = .->size<3>:@fm:.->size<4>\r\n\r\nUtility(\"CURSOR\",\"\")\r\n\r\nEnd_Window(dlg_win, @window)\r\n\r\nRETURN 0\r\n\r\n*************************************************\r\n*\t\t\t\t\t\t\t\t\t\t\t\t*\r\n* Reusable subroutine\t\t\t\t\t\t\t*\r\n*\t\t\t\t\t\t\t\t\t\t\t\t*\r\n*************************************************\r\n\r\nShowForm:\r\n\tGoSub MoveControls\r\n\theaders = \"Field Name:\":@fm:\"Data Type:\"\t;*:@fm:\"Data Length\"\r\n\t.prop_tbl->list = headers\r\n\t\r\n\t/* Fill in fields in the auxiliary table (table_2) */\r\n\t\r\n\tiCnt = count(fields, @fm)+1\r\n\tlist = \"\"\r\n\tprop_list = \"\"\r\n\tFor i = 1 to iCnt\r\n\t\tlist<i> = fields<i, 1>\r\n\t\tprop_list<i> = fields<i>:@vm:fields<i,1>\r\n\tNext  \r\n\t.fld_list->list = list\r\n\t.table_2->list = prop_list\r\nReturn\r\n\r\n\r\nShowView:\r\n\tEqu ETCS_HIDDEN$ to 32 \t\t\t;* 0x0020\r\n\t\r\n\tGoSub MoveControls\r\n\t\t\r\n\t/* Update table_2 with Item Name, Item Title, Formula Text, and formula flag */\r\n\t\r\n \tStyle = Send_Message(view_tbl, \"COLSTYLE\", 2)\r\n\tCharQty = 40\r\n\t\r\n\tiCnt = (count(columns, @fm)+1) * Not(Not(columns))\r\n\t\r\n\tprop_list = \"\"\r\n\tFor i = 1 to iCnt \r\n\t\tprop_list<i> = columns<i, 10>:@vm:columns<i, 2>:@vm:columns<i, 1>:@vm:columns<i, 3>\r\n\t\t\r\n\t\tColTitle = columns<i, 2>\r\n\t\tGoSub GiveWidth\r\n\t\t\r\n\t\tstatus = Send_Message(view_tbl, \"INSERTCOL\", i + 2, |\r\n\t\t\t\t\t\t\t  ColTitle:@fm:Style:@fm:CharQty:@fm:TitleWidth)\t\t\r\n\tNext\r\n\tIf iCnt Then status = Send_Message(view_tbl, \"DELETECOL\", 2)\r\n\t\r\n\t.table_2->list = prop_list\r\n\r\n\tcolStyle = Send_Message (view_tbl, \"COLSTYLE\", 1) \t \t\r\n\tcolStyle = bitor(colStyle, ETCS_HIDDEN$)           \t\t;* set the HIDDEN bit\r\n\r\n\t/* We need to turn redrawing off while changing the style */\r\n\t@view_tbl->redraw = FALSE$\r\n\tstatus = Send_Message (view_tbl, \"COLSTYLE\", 1, colStyle)\r\n\t.view_table->list = \" \"\r\n\t@view_tbl->redraw = TRUE$\r\n\t\r\n\tstatus = Send_Event(@window, \"OMNIEVENT\", \"FILL_FIELDS\") \t;* Show available fields \r\nReturn\r\n\r\n\r\nShowSharedField:\r\nReturn\r\n\r\nGiveWidth:\t\t\t\t\t\t\t\t\t\t;* Determine text length \r\n\tTextStrct = \"\"\r\n\tIf ColTitle = \"\" Then ColTitle = \" \"\r\n\tTextStrct<1> = ColTitle:char(13):char(10)\t\r\n\tTextStrct<2> = \\0500\\\t\t\t\t\t\t;* DT_NOCLIP | DT_LEFT | DT_CALCRECT\r\n\r\n\tTitleWidth = Utility(\"TEXTRECT\", view_tbl,  TextStrct)\r\n\tTitleWidth = TitleWidth<1>\r\nReturn\r\n\r\n\r\nMoveControls:\r\n\tViewSrc = \"ardown_btn;fake_list;view_table;displ_txt;radio_1;vf_list;seprt;list_5\"\t\t\t  \r\n\tFieldSrc = \"fld_list;right_lst;prop_tbl\"\r\n\t\r\n\tyShift = 155\r\n\tflg    = BitAnd(mod(.text_3->text, 3) , 2)\r\n\tbShow  = flg\r\n\t\r\n\tConvert \";\" to @fm in ViewSrc\r\n\tConvert \";\" to @fm in FieldSrc\r\n\t\r\n\tCntrSrc = ViewSrc:@fm:FieldSrc\r\n\t\r\n\tjCnt   = count(CntrSrc, @fm) + 1\r\n\tfldCnt = count(FieldSrc, @fm) + 1\r\n\r\n\tFor j = 1 to jCnt\r\n\t\tTempSize = Get_Property(@window:\".\":CntrSrc<j>, \"SIZE\")\t \r\n\t\t\r\n\t\tIf j < jCnt - fldCnt Then \r\n\t\t\tTempSize<2> = TempSize<2> - yShift\r\n\t\tEnd Else\r\n\t\t\tbShow = Not(flg)\r\n\t\t\tTempSize<2> = TempSize<2> + 10 * yShift * flg \t\t\r\n\t\tEnd\r\n\t\t\r\n\t\tx = Set_Property(@window:\".\":CntrSrc<j>, \"SIZE\", TempSize)\t\t\r\n\t\tx = Set_Property(@window:\".\":CntrSrc<j>, \"VISIBLE\", bShow)\r\n\tNext\r\nReturn\r\n"
    }
}